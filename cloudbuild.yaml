# This file is the blueprint for Google Cloud Build to automatically build,
# test, and deploy your application.

steps:
# 1. Build the Docker container image
- name: 'gcr.io/cloud-builders/docker'
  args: [
    'build',
    '-t', 'us-central1-docker.pkg.dev/${_PROJECT_ID}/${_REPOSITORY}/${_SERVICE_NAME}:${COMMIT_SHA}',
    '.'
  ]

# 2. Push the container image to Artifact Registry
- name: 'gcr.io/cloud-builders/docker'
  args: [
    'push',
    'us-central1-docker.pkg.dev/${_PROJECT_ID}/${_REPOSITORY}/${_SERVICE_NAME}:${COMMIT_SHA}'
  ]

# 3. Deploy the container image to Cloud Run
- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  entrypoint: gcloud
  args:
    - 'run'
    - 'deploy'
    - '${_SERVICE_NAME}'
    - '--image=us-central1-docker.pkg.dev/${_PROJECT_ID}/${_REPOSITORY}/${_SERVICE_NAME}:${COMMIT_SHA}'
    - '--region=${_REGION}'
    - '--platform=managed'
    - '--allow-unauthenticated'
    - '--port=5000'
    - '--set-secrets=DATABASE_URL=DATABASE_URL:latest,GEMINI_API_KEY=GEMINI_API_KEY:latest,MASTER_ENCRYPTION_KEY=MASTER_ENCRYPTION_KEY:latest,SESSION_SECRET=SESSION_SECRET:latest'

# Configuration for this build
substitutions:
  _PROJECT_ID: 'gen-lang-client-0226111256'
  _REPOSITORY: 'goplan-repository'
  _SERVICE_NAME: 'goplan-idx-service'
  _REGION: 'us-central1'

# Final image to be stored
images:
- 'us-central1-docker.pkg.dev/${_PROJECT_ID}/${_REPOSITORY}/${_SERVICE_NAME}:${COMMIT_SHA}'

# Options for the build
options:
  # This setting resolves the "Failed to trigger build" error by specifying
  # that this build should use the standard Cloud Logging service and not
  # a separate storage bucket for logs.
  logging: CLOUD_LOGGING_ONLY
