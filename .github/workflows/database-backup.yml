name: Database Backup

on:
  schedule:
    - cron: '0 2 * * *'
  workflow_dispatch:

jobs:
  backup:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Install PostgreSQL 17 client
      run: |
        # Download and install PostgreSQL 17 binaries
        wget -q https://ftp.postgresql.org/pub/binary/v17.2/linux/postgresql-17.2-1-linux-x64-binaries.tar.gz
        tar -xzf postgresql-17.2-1-linux-x64-binaries.tar.gz
        sudo mv pgsql /usr/local/
        sudo ln -sf /usr/local/pgsql/bin/pg_dump /usr/local/bin/pg_dump
        export PATH="/usr/local/pgsql/bin:$PATH"
        pg_dump --version
        
    - name: Create backup directory
      run: mkdir -p backups
      
    - name: Create database backup
      env:
        DATABASE_URL: ${{ secrets.DATABASE_URL }}
        PATH: /usr/local/pgsql/bin:$PATH
      run: |
        BACKUP_DATE=$(date +'%Y%m%d_%H%M%S')
        BACKUP_FILE="backups/backup_${BACKUP_DATE}.sql"
        
        # Use PostgreSQL 17 pg_dump
        /usr/local/pgsql/bin/pg_dump "$DATABASE_URL" > "$BACKUP_FILE"
        gzip "$BACKUP_FILE"
        
        echo "Backup created: ${BACKUP_FILE}.gz"
        
    - name: Upload backup as artifact
      uses: actions/upload-artifact@v4
      with:
        name: database-backup-${{ github.run_number }}
        path: backups/*.gz
        retention-days: 30
        
    - name: List current backups
      run: |
        echo "Available backups:"
        ls -la backups/
        
    - name: Cleanup old local backups
      run: |
        find backups -name "*.gz" -mtime +7 -delete || true
