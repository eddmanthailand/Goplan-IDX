name: Database Backup

on:
  schedule:
    - cron: '0 2 * * *'
  workflow_dispatch:

jobs:
  backup:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup PostgreSQL 17 client
      run: |
        docker pull postgres:17
        echo '#!/bin/bash' > /tmp/pg_dump
        echo 'docker run --rm -e PGPASSWORD="$PGPASSWORD" postgres:17 pg_dump "$@"' >> /tmp/pg_dump
        chmod +x /tmp/pg_dump
        sudo mv /tmp/pg_dump /usr/local/bin/pg_dump
        
    - name: Create backup directory
      run: mkdir -p backups
      
    - name: Create database backup
      env:
        DATABASE_URL: ${{ secrets.DATABASE_URL }}
      run: |
        BACKUP_DATE=$(date +'%Y%m%d_%H%M%S')
        BACKUP_FILE="backups/backup_${BACKUP_DATE}.sql"
        
        pg_dump "$DATABASE_URL" > "$BACKUP_FILE"
        gzip "$BACKUP_FILE"
        
        echo "Backup created: ${BACKUP_FILE}.gz"
        
    - name: Upload backup as artifact
      uses: actions/upload-artifact@v4
      with:
        name: database-backup-${{ github.run_number }}
        path: backups/*.gz
        retention-days: 30
        
    - name: List current backups
      run: |
        echo "Available backups:"
        ls -la backups/
        
    - name: Cleanup old local backups
      run: |
        find backups -name "*.gz" -mtime +7 -delete || true