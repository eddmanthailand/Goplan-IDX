#!/bin/bash

# Database Restore Script
# ‡πÉ‡∏ä‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö restore backup ‡∏à‡∏≤‡∏Å GitHub Actions

set -e

echo "üîÑ Database Restore Script"
echo "========================="

# ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ DATABASE_URL ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
if [ -z "$DATABASE_URL" ]; then
    echo "‚ùå Error: DATABASE_URL environment variable is required"
    echo "   Set it with: export DATABASE_URL='your_database_url'"
    exit 1
fi

# ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡πÑ‡∏ü‡∏•‡πå backup ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
if [ $# -eq 0 ]; then
    echo "‚ùå Error: Backup file is required"
    echo "   Usage: ./scripts/restore-backup.sh <backup_file>"
    echo "   Example: ./scripts/restore-backup.sh backups/backup_20250616_020000.sql.gz"
    exit 1
fi

BACKUP_FILE="$1"

# ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÑ‡∏ü‡∏•‡πå‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡∏à‡∏£‡∏¥‡∏á
if [ ! -f "$BACKUP_FILE" ]; then
    echo "‚ùå Error: Backup file not found: $BACKUP_FILE"
    exit 1
fi

echo "üìÅ Backup file: $BACKUP_FILE"
echo "üóÑÔ∏è Database: $DATABASE_URL"
echo ""

# ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£ restore
read -p "‚ö†Ô∏è  WARNING: This will REPLACE all current data. Continue? (y/N): " -n 1 -r
echo ""

if [[ ! $REPLY =~ ^[Yy]$ ]]; then
    echo "‚ùå Restore cancelled"
    exit 1
fi

echo "üîÑ Starting restore process..."

# ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÑ‡∏ü‡∏•‡πå‡πÄ‡∏õ‡πá‡∏ô .gz ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
if [[ "$BACKUP_FILE" == *.gz ]]; then
    echo "üì¶ Extracting compressed backup..."
    gunzip -c "$BACKUP_FILE" | psql "$DATABASE_URL"
else
    echo "üìÑ Restoring SQL backup..."
    psql "$DATABASE_URL" < "$BACKUP_FILE"
fi

echo ""
echo "‚úÖ Database restore completed successfully!"
echo "üïê Restore completed at: $(date)"
